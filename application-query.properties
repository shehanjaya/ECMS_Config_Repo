EodMain.Select.loadFilePath = SELECT RB36,STATEMENTFILE,LETTERS,GLFILE,MERCHANTGLFILE,AUTOSETTLEMENT,EODFILE,EXPOSUREFILE,MERCHANTSTATEMENTFILE, MERCHANTCUSTOMERSTATEMENTFILE,MERCHANTSTATEMENTSUMMARYFILE,OUTGOINGFILE, MERCHANTPAYMENTFILE,CASHBACK,BULKAPPLICATION, PRINTEDSTATEMENTREPORT,OUTGOINGIPMFILE,MASTERCARDABUFILE,EODDASHBOARDCONSOLELOG,OUTGOINGUPISTATEMENTFILE FROM COMMONFILEPATH WHERE OSTYPE = ?
EodMain.Select.loadTxnTypeConfigurations = SELECT ONLINETXNTYPE,TRANSACTIONCODE FROM TRANSACTIONTYPE

Common.Select.getProcessDetails = SELECT PROCESSID,DESCRIPTION,CRITICALSTATUS,ROLLBACKSTATUS,SHEDULEDATE,SHEDULETIME,FREQUENCYTYPE,CONTINUESFREQUENCYTYPE,CONTINUESFREQUENCY,MULTIPLECYCLESTATUS,PROCESSCATEGORYID,DEPENDANCYSTATUS,RUNNINGONMAIN,RUNNINGONSUB,PROCESSTYPE,STATUS,SHEDULEDATETIME,HOLIDAYACTION,KAFKATOPICNAME,KAFKAGROUPID,EODMODULE FROM EODPROCESS WHERE PROCESSID = ?
Common.Insert.insertToEodProcessSumery = INSERT INTO EODPROCESSSUMMERY (EODID,PROCESSID,STARTTIME,STATUS,CREATEDTIME,LASTUPDATEDTIME,LASTUPDATEDUSER,SUCCESSCOUNT,FAILEDCOUNT,PROCESSPROGRESS) VALUES (?,?,SYSDATE,?,SYSDATE,SYSDATE,?,0,0,0)
Common.Update.eodProcessSummery = UPDATE EODPROCESSSUMMERY SET ENDTIME = SYSDATE , STATUS = ?,LASTUPDATEDTIME = SYSDATE,LASTUPDATEDUSER = ?,SUCCESSCOUNT = ?,FAILEDCOUNT = ?,PROCESSPROGRESS= ? WHERE EODID = ? AND PROCESSID = ?
Common.Select.getProcessDetails = SELECT PROCESSID,DESCRIPTION,CRITICALSTATUS,ROLLBACKSTATUS,SHEDULEDATE,SHEDULETIME,FREQUENCYTYPE,CONTINUESFREQUENCYTYPE,CONTINUESFREQUENCY,MULTIPLECYCLESTATUS,PROCESSCATEGORYID,DEPENDANCYSTATUS,RUNNINGONMAIN,RUNNINGONSUB, PROCESSTYPE,STATUS,SHEDULEDATETIME,HOLIDAYACTION,KAFKATOPICNAME,KAFKAGROUPID,EODMODULE FROM EODPROCESS WHERE PROCESSID = ?
Common.Insert.insertToEODTransaction = INSERT INTO EODTRANSACTION (EODID,CARDNUMBER,ACCOUNTNO,MID,TID,TRANSACTIONAMOUNT, CURRENCYTYPE,CRDR,SETTLEMENTDATE,TRANSACTIONDATE,TRANSACTIONTYPE,BATCHNO, TRANSACTIONID,LASTUPDATEDUSER,CREATEDTIME,LASTUPDATEDTIME,TOACCOUNTNO,STATUS,TRANSACTIONDESCRIPTION,COUNTRYNUMCODE,ONOFFSTATUS,POSENTRYMODE,TRACEID,AUTHCODE,ACQADJUSTMENTFLAG,REQUESTFROM,SECOND_PARTY_PAN,FUELSURCHARGEAMOUNT,MCC,ORIGINALTRANSACTIONTYPE,CARDASSOCIATION) VALUES (?,?,?,?,?,?,?,?,TO_DATE(?,'DD-MM-YY'),TO_DATE(?,'DD-MM-YY'),?,?,?,?,SYSDATE,SYSDATE,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
Common.Insert.insertIntoEodMerchantTransaction = INSERT INTO EODMERCHANTTRANSACTION (AUTHCODE,BATCHNO,COUNTRYNUMCODE,CRDR,CREATEDTIME,CURRENCYTYPE,EODID,FOREXMARKUPAMOUNT,GLSTATUS,LASTUPDATEDTIME,LASTUPDATEDUSER,MID,ONOFFSTATUS,PAYMENTTYPE,POSENTRYMODE,RRN,SEQUENCENUMBER,SETTLEMENTDATE,STATUS,TID,TOACCOUNTNO,TRACEID,TRANSACTIONAMOUNT,TRANSACTIONDATE,TRANSACTIONDESCRIPTION,TRANSACTIONID,TRANSACTIONTYPE,MCC,BIN,CARDNUMBER,ADJUSTMENTFLAG,REQUESTFROM,FUELSURCHARGEAMOUNT,CARDASSOCIATION,CARDPRODUCT) VALUES(?,?,?,?,SYSDATE,?,?,?,?,SYSDATE,?,?,?,?,?,?,?,?,?,?,?,?,?,TO_DATE(?,'DD-MM-YY'),?,?,?,?,?,?,?,?,?,?,?)
Common.Update.updateTransactionToEDON = UPDATE TRANSACTION SET EODSTATUS=? WHERE TXNID=? 
Common.Select.getNewCardNumber = SELECT CR1.NEWCARDNUMBER CARDNUMBER FROM CARDREPLACE CR1 LEFT JOIN CARDREPLACE CR2 ON CR2.OLDCARDNUMBER = CR1.NEWCARDNUMBER INNER JOIN CARD C ON C.CARDNUMBER = CR1.NEWCARDNUMBER WHERE C.CARDSTATUS NOT IN (?,?) START WITH CR1.OLDCARDNUMBER = ? CONNECT BY PRIOR CR1.NEWCARDNUMBER = CR1.OLDCARDNUMBER 
Common.Update.updateCardOtb = UPDATE ECMS_ONLINE_CARD SET OTBCREDIT = OTBCREDIT - ?,OTBCASH = OTBCASH - ?,TEMPCREDITAMOUNT = TEMPCREDITAMOUNT + ?,TEMPCASHAMOUNT = TEMPCASHAMOUNT + ?,LASTUPDATEUSER=?, LASTUPDATETIME=SYSDATE WHERE CARDNUMBER=?  
Common.Update.updateAccountOtb = UPDATE ECMS_ONLINE_ACCOUNT SET OTBCREDIT = OTBCREDIT - ?,OTBCASH = OTBCASH - ? WHERE ACCOUNTNUMBER=?  
Common.Update.updateCustomerOtb = UPDATE ECMS_ONLINE_CUSTOMER SET OTBCREDIT= OTBCREDIT - ?,OTBCASH= OTBCASH - ? WHERE CUSTOMERID = ?  

Common.Select.getMainCardNumber = SELECT MAINCARDNO FROM CARD WHERE CARDNUMBER =?

Initial.Update.swapEodCardBalance =UPDATE EODCARDBALANCE SET EODSTARTINGBAL = EODCLOSINGBAL
Initial.Update.insertIntoAccountBalance = UPDATE CARDACCOUNT SET OPENINGOTBCREDIT = OTBCREDIT 
Initial.Update.setResetCapsLimit = UPDATE tableName SET PINCOUNT= CASE  WHEN STATUS != ? THEN ?  ELSE PINCOUNT END,  TXNCOUNT = ?, TOTALTXNAMOUNT = ?, CASHTXNCOUNT = ?, TOTALCASHTXNAMOUNT = ?
Initial.Update.setResetCapsLimitAccount = UPDATE tableName SET TXNCOUNT = ?, TOTALTXNAMOUNT = ?, CASHTXNCOUNT = ?, TOTALCASHTXNAMOUNT = ?

EodParamReset.Update.resetMerchantParameters = UPDATE ECMS_ONLINE_MERCHANT SET TXNCOUNT= ? , CASHTXNCOUNT = ? , TOTALTXNAMOUNT=? , TOTALCASHTXNAMOUNT=?, LASTUPDATEUSER=?, LASTUPDATETIME=SYSDATE
EodParamReset.Update.resetTerminalParameters = UPDATE ECMS_ONLINE_TERMINAL SET TXNCOUNT= ? , CASHTXNCOUNT = ? , TOTALTXNAMOUNT=? , TOTALCASHTXNAMOUNT=?, LASTUPDATEUSER=?, LASTUPDATETIME=SYSDATE

CardReplace.Select.getCardListToReplace = SELECT CR.NEWCARDNUMBER,CR.OLDCARDNUMBER FROM CARDREPLACE CR,CARD CA WHERE CA.CARDSTATUS = ? AND CA.CARDNUMBER = CR.NEWCARDNUMBER AND  CR.STATUS = ? AND TRUNC(CR.REPLACEDATE) <= TO_DATE(?,'DD-MM-YY')
CardReplace.Update.updateCardReplaceStatus = UPDATE CARDREPLACE SET PINGENERATIONSTATUS = ?, LETTERGENERATIONSTATUS=?, STATUS = ? WHERE NEWCARDNUMBER = ?

AcqTxnUpdate.Select.getAllSettledTxnFromTxn = SELECT TXNID,NVL(ONOFFSTSTUS,1) AS ONOFFSTSTUS,CARDNO,TXNCURRENCY,CB_SEQ_NO, NVL((TXNAMOUNT)/100,0) AS TRANSACTIONAMOUNT,NVL(NVL((BILLINGAMOUNT),0)/100,0) AS BILLINGAMOUNT,BATCHNO,TID,MID,MCC,COUNTRYCODE,TRACENO,RRN,AUTHCODE,POSENTRYMODE, CAIC,BACKENDTXNTYPE,TOACCOUNT,CREATETIME,REQUESTFROM,SECOND_PARTY_PAN,SETTLEMENTDATE,CHANNELTYPE,LISTENERTYPE FROM TRANSACTION WHERE ACQORISS = ? AND RESPONSECODE = ?  AND EODSTATUS = ?  AND STATUS IN (?,?)  AND TRUNC(CREATETIME) <= TRUNC(TO_DATE(?))  AND BACKENDTXNTYPE NOT IN(?,?) AND EODCONSIDERSTATUS = ? 
AcqTxnUpdate.Select.getForexPercentage = SELECT NVL(VISATXNTOLLERANCERATE,0) AS VISATXNTOLLERANCERATE FROM COMMONPARAMETER
AcqTxnUpdate.Select.getFuelSurchargeRatePercentage = SELECT NVL(FUELSURCHARGERATE ,0) AS FUELSURCHARGERATE FROM COMMONPARAMETER
AcqTxnUpdate.Select.getFuelMccList = SELECT FUELMCCLIST AS FUELMCCLIST  FROM COMMONPARAMETER
AcqTxnUpdate.Select.getFinancialStatus = SELECT TRANSACTIONCODE,FINANCIALSTATUS FROM TRANSACTIONTYPE

PaymentReversal.Select.getPaymentReversals = SELECT * FROM PAYMENT WHERE TRANSACTIONTYPE in(?) AND EODID=? and STATUS=?
PaymentReversal.Update.insertPaymentsForCashReversals = UPDATE PAYMENT SET STATUS=? WHERE SEQUENCENUMBER=? AND CARDNUMBER=? AND EODID=?
PaymentReversal.Update.updatePaymentsForCashReversals = UPDATE PAYMENT SET STATUS=? WHERE TRACEID=? AND CARDNUMBER=? AND TRANSACTIONTYPE=? AND EODID=?

TxnMismatchPost.Select.getInitEodTxnMismatchPostCustAcc = SELECT DISTINCT CAC.CUSTOMERID, CAC.ACCOUNTNO FROM EODTRANSACTION ET INNER JOIN CARD C ON C.CARDNUMBER = ET.CARDNUMBER INNER JOIN CARDACCOUNTCUSTOMER CAC ON CAC.CARDNUMBER = C.MAINCARDNO LEFT OUTER JOIN TRANSACTION T ON T.TXNID = ET.TRANSACTIONID WHERE ET.STATUS = ? AND ET.EODID = ?  AND ET.ONLYVISAFALSE NOT IN(?) AND ((ET.TRANSACTIONTYPE = ? AND ET.CRDR = ?) OR (ET.TRANSACTIONTYPE = ? AND ET.CRDR = ?) OR (ET.TRANSACTIONTYPE = ? AND ET.CRDR = ?) OR (ET.TRANSACTIONTYPE = ? AND ET.CRDR = ?) OR (ET.TRANSACTIONTYPE = ? AND ET.CRDR = ?) OR (ET.TRANSACTIONTYPE = ? AND ET.CRDR = ?) OR (ET.TRANSACTIONTYPE = ? AND ET.CRDR = ?) OR (ET.TRANSACTIONTYPE = ? AND ET.CRDR = ?) OR (ET.TRANSACTIONTYPE = ? AND ET.CRDR = ?))  AND CAC.ACCOUNTNO not in  (select ec.ACCOUNTNO from eoderrorcards ec where ec.status= ? ) GROUP BY CAC.CUSTOMERID, CAC.ACCOUNTNO  HAVING SUM(NVL(ET.TRANSACTIONAMOUNT,0)-NVL((CASE WHEN T.TXNCURRENCY = ? THEN T.TXNAMOUNT ELSE T.BILLINGAMOUNT END)/100,0)) != 0 ORDER BY CAC.CUSTOMERID, CAC.ACCOUNTNO
TxnMismatchPost.Select.getErrorEodTxnMismatchPostCustAcc = SELECT DISTINCT CAC.CUSTOMERID, CAC.ACCOUNTNO FROM EODTRANSACTION ET INNER JOIN CARD C ON C.CARDNUMBER = ET.CARDNUMBER INNER JOIN CARDACCOUNTCUSTOMER CAC ON CAC.CARDNUMBER = C.MAINCARDNO INNER JOIN EODERRORCARDS EEC ON EEC.ACCOUNTNO = CAC.ACCOUNTNO LEFT OUTER JOIN TRANSACTION T ON T.TXNID = ET.TRANSACTIONID WHERE ET.STATUS = ? AND ET.EODID = ? AND ET.ONLYVISAFALSE NOT IN(?) AND EEC.PROCESSSTEPID <= ? AND ((ET.TRANSACTIONTYPE = ? AND ET.CRDR = ?) OR (ET.TRANSACTIONTYPE = ? AND ET.CRDR = ?) OR (ET.TRANSACTIONTYPE = ? AND ET.CRDR = ?) OR (ET.TRANSACTIONTYPE = ? AND ET.CRDR = ?) OR (ET.TRANSACTIONTYPE = ? AND ET.CRDR = ?) OR (ET.TRANSACTIONTYPE = ? AND ET.CRDR = ?) OR (ET.TRANSACTIONTYPE = ? AND ET.CRDR = ?) OR (ET.TRANSACTIONTYPE = ? AND ET.CRDR = ?) OR (ET.TRANSACTIONTYPE = ? AND ET.CRDR = ?)) AND EEC.STATUS = ? AND EEC.EODID < ? GROUP BY CAC.CUSTOMERID, CAC.ACCOUNTNO HAVING SUM(NVL(ET.TRANSACTIONAMOUNT,0)-NVL((CASE WHEN T.TXNCURRENCY = ? THEN T.TXNAMOUNT ELSE T.BILLINGAMOUNT END)/100,0)) != 0 ORDER BY CAC.CUSTOMERID, CAC.ACCOUNTNO
TxnMismatchPost.Select.getInitTxnMismatch = SELECT ET.CARDNUMBER, TT.TRANSACTIONCODE, TT.DESCRIPTION,ET.CRDR, (CASE WHEN ET.CRDR='CR' THEN -1*SUM(NVL(ET.TRANSACTIONAMOUNT,0)-NVL((CASE WHEN T.TXNCURRENCY = ? THEN T.TXNAMOUNT ELSE T.BILLINGAMOUNT END)/100,0))ELSE SUM(NVL(ET.TRANSACTIONAMOUNT,0)-NVL((CASE WHEN T.TXNCURRENCY = ? THEN T.TXNAMOUNT ELSE T.BILLINGAMOUNT END)/100,0)) END) AS TXNMISMATCHAMOUNT  FROM EODTRANSACTION ET LEFT JOIN TRANSACTION T ON T.TXNID = ET.TRANSACTIONID INNER JOIN TRANSACTIONTYPE TT ON TT.TRANSACTIONCODE = ET.TRANSACTIONTYPE WHERE ET.STATUS = ? AND ET.EODID = ? AND ET.ONLYVISAFALSE NOT IN(?)AND ((ET.TRANSACTIONTYPE = ? AND ET.CRDR = ?) OR (ET.TRANSACTIONTYPE = ? AND ET.CRDR = ?) OR (ET.TRANSACTIONTYPE = ? AND ET.CRDR = ?) OR (ET.TRANSACTIONTYPE = ? AND ET.CRDR = ?) OR (ET.TRANSACTIONTYPE = ? AND ET.CRDR = ?) OR (ET.TRANSACTIONTYPE = ? AND ET.CRDR = ?) OR (ET.TRANSACTIONTYPE = ? AND ET.CRDR = ?) OR (ET.TRANSACTIONTYPE = ? AND ET.CRDR = ?) OR (ET.TRANSACTIONTYPE = ? AND ET.CRDR = ?) OR (ET.TRANSACTIONTYPE = ? AND ET.CRDR = ?)) AND ET.ACCOUNTNO = ? GROUP BY ET.CARDNUMBER, TT.TRANSACTIONCODE, TT.DESCRIPTION, ET.CRDR HAVING SUM(NVL(ET.TRANSACTIONAMOUNT,0)-NVL((CASE WHEN T.TXNCURRENCY = ? THEN T.TXNAMOUNT ELSE T.BILLINGAMOUNT END)/100,0)) != 0

Adjustment.Select.getAdjustmentList = SELECT A.ID, A.TRACENO, T.TXNID AS TXNID, A.UNIQUEID, A.AMOUNT, A.CRDR, A.ADJUSTDATE, A.ADJUSTMENTTYPE, NVL(A.REMARKS,'ADJUSTMENT') AS REMARK, A.TRANSACTIONTYPE, C.ACCOUNTNO, NVL(A.CURRENCYTYPE,144) AS CURRENCYTYPE FROM ADJUSTMENT A, CARDACCOUNTCUSTOMER C, TRANSACTION T WHERE A.STATUS = ? AND T.TRACENO = A.TRACENO AND T.CARDNO = A.UNIQUEID AND T.BACKENDTXNTYPE IN(?,?) AND T.EODSTATUS NOT IN(?) AND A.ADJUSTMENTTYPE NOT IN(?,?) AND A.EODSTATUS NOT IN(?,?) AND TO_DATE(A.ADJUSTDATE, 'DD-MM-YY')<= TO_DATE(?, 'DD-MM-YY') AND C.CARDNUMBER =A.UNIQUEID
Adjustment.Insert.insertToEODPayments = INSERT INTO EODPAYMENT(SEQUENCENUMBER,EODID,CARDNUMBER,MAINCARDNO,ISPRIMARY,AMOUNT,PAYMENTTYPE,TRACEID,FORWARDAMOUNT,STATUS,CREATEDTIME,LASTUPDATEDUSER,LASTUPDATEDDATE)VALUES(?,?,?,?,?,?,?,?,?,?,SYSDATE,?,SYSDATE)
Adjustment.Select.getCardAssociationFromCardBin = SELECT CAC.CARDASSOCIATION AS CARDASSOCIATION FROM CARDASSOCIATIONCHANNEL CAC INNER JOIN BIN CB ON CAC.CHANNELID=CB.CHANNELID WHERE CB.BIN=?
Adjustment.Insert.insertInToEODTransaction.AdTypeNotNull = INSERT INTO EODTRANSACTION (EODID,CARDNUMBER,ACCOUNTNO,TRANSACTIONAMOUNT,CURRENCYTYPE,SETTLEMENTDATE,TRANSACTIONDATE,TRANSACTIONTYPE,TRANSACTIONID,LASTUPDATEDUSER,CREATEDTIME,LASTUPDATEDTIME,STATUS,TRANSACTIONDESCRIPTION,CRDR,CARDASSOCIATION,ADJUSTMENTSTATUS,ONLYVISAFALSE) VALUES (?,?,?,?,?,TO_DATE(?, 'DD-MM-YY'),TO_DATE(?, 'DD-MM-YY'),?,?,?,SYSDATE,SYSDATE,?,?,?,?,?,?)
Adjustment.Insert.insertInToEODTransaction.AdTypeNull = INSERT INTO EODTRANSACTION (EODID,CARDNUMBER,ACCOUNTNO,TRANSACTIONAMOUNT,CURRENCYTYPE,SETTLEMENTDATE,TRANSACTIONDATE,TRANSACTIONTYPE,TRANSACTIONID,LASTUPDATEDUSER,CREATEDTIME,LASTUPDATEDTIME,STATUS,TRANSACTIONDESCRIPTION,CRDR,CARDASSOCIATION) VALUES (?,?,?,?,?,TO_DATE(?, 'DD-MM-YY'),TO_DATE(?, 'DD-MM-YY'),?,?,?,SYSDATE,SYSDATE,?,?,?,?)
Adjustment.Update.updateAdjustmentStatus = UPDATE ADJUSTMENT SET EODSTATUS = ? WHERE ID = ?
Adjustment.Update.updateTransactionToEDON = UPDATE TRANSACTION SET EODSTATUS=? WHERE TXNID=?

CardFee.Select.getCardFeeCountList = SELECT CF.CARDNUMBER,CD.NEXTANNIVERSARYDATE,CF.CASHAMOUNT,CD.CREDITLIMIT, CD.OTBCREDIT,CC.ACCOUNTNO,CA.STATUS,CF.FEECODE,CF.FEECOUNT,FF.CURRENCYCODE,FF.CRORDR,FF.FLATFEE,FF.MINIMUMAMOUNT,FF.MAXIMUMAMOUNT, FF.PERSENTAGE, FF.COMBINATION FROM CARDFEECOUNT CF,CARD CD,FEEPROFILEFEE FF,CARDACCOUNTCUSTOMER CC,CARDACCOUNT CA WHERE CF.CARDNUMBER = CD.CARDNUMBER AND CF.CARDNUMBER = CC.CARDNUMBER AND CD.FEEPROFILECODE = FF.FEEPROFILECODE AND CF.FEECODE = FF.FEECODE AND CA.ACCOUNTNO = CC.ACCOUNTNO AND CD.CARDSTATUS not in(?) and CF.STATUS in(?,?) and CF.FEECOUNT<>0 AND TO_DATE(CF.CREATEDDATE,'DD-MM-YY') <= TO_DATE(?,'DD-MM-YY')
CardFee.Select.getCardFeeCountForCard = SELECT CF.CARDNUMBER,CD.NEXTANNIVERSARYDATE,CF.CASHAMOUNT,CD.CREDITLIMIT,CD.NEXTANNIVERSARYDATE  AS NEXTANN, CD.OTBCREDIT,CC.ACCOUNTNO,CA.STATUS,CF.FEECODE,CF.FEECOUNT,FF.CURRENCYCODE,FF.CRORDR,FF.FLATFEE,FF.MINIMUMAMOUNT,FF.MAXIMUMAMOUNT,ff.persentage, FF.COMBINATION FROM CARDFEECOUNT CF,CARD CD,FEEPROFILEFEE FF,CARDACCOUNTCUSTOMER CC,CARDACCOUNT CA WHERE CF.CARDNUMBER = CD.CARDNUMBER AND CF.CARDNUMBER = CC.CARDNUMBER AND CD.FEEPROFILECODE = FF.FEEPROFILECODE AND CF.FEECODE = FF.FEECODE AND CA.ACCOUNTNO = CC.ACCOUNTNO  and  cf.cardnumber=? AND CC.ACCOUNTNO = ? and cf.feecode= ? AND CD.CARDSTATUS <> ?
CardFee.Select.getNextBillingDateForCard = SELECT NEXTBILLINGDATE FROM CARDACCOUNT WHERE CARDNUMBER = (SELECT MAINCARDNO FROM CARD WHERE CARDNUMBER =?)
CardFee.Insert.insertToEODCardFee = INSERT INTO EODCARDFEE(EODID,CARDNUMBER,ACCOUNTNO,CRDR,FEEAMOUNT,CURRENCYTYPE,EFFECTDATE,FEETYPE,LASTUPDATEDUSER,STATUS,TRANSACTIONID) VALUES (?,?,?,?,?,?,?,?,?,?,?)
CardFee.Update.updateCardFeeCount = UPDATE CARDFEECOUNT SET FEECOUNT = 0, CASHAMOUNT=0, STATUS=? WHERE CARDNUMBER = ? AND FEECODE = ?
CardFee.Update.updateDELINQUENTACCOUNTNpDetails = UPDATE DELINQUENTACCOUNT SET NPACCRUEDINTEREST = NPACCRUEDINTEREST + ?, NPACCRUEDOVERLIMITFEES = NPACCRUEDOVERLIMITFEES + ?, NPACCRUEDLATEPAYFEES = NPACCRUEDLATEPAYFEES + ?, NPACCRUEDFEES = NPACCRUEDFEES + ? WHERE ACCOUNTNO = ?

ATMFileRead.Insert.RecInputRowData = INSERT INTO RECATMINPUTROWDATA (FILEID,LINENUMBER,RECORDCONTENT) VALUES (:fileId,:lineNumber,:recordContent)
PaymentFileRead.Insert.RecInputRowData = INSERT INTO RECPAYMENTINPUTROWDATA (FILEID,LINENUMBER,RECORDCONTENT) VALUES (:fileId,:lineNumber,:recordContent)

ATMFileClearing.Insert.RecInputRowData = INSERT INTO RECATMINPUTROWDATA (FILEID,LINENUMBER,RECORDCONTENT) VALUES (:fileId,:lineNumber,:recordContent)
PaymentFileClearing.Insert.RecInputRowData = INSERT INTO RECPAYMENTINPUTROWDATA (FILEID,LINENUMBER,RECORDCONTENT) VALUES (:fileId,:lineNumber,:recordContent)
VisaFileClearing.Insert.RecInputRowData = INSERT INTO RECVISAINPUTROWDATA (FILEID,LINENUMBER,RECORDCONTENT) VALUES (:fileId,:lineNumber,:recordContent)
